/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.anhembi.a3;

import com.anhembi.a3.models.Atleta;
import com.anhembi.a3.models.AtletaTableModel;
import com.anhembi.a3.models.Evento;
import dummyData.DummyAtleta;
import dummyData.DummyEvento;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 * 
 * PROJETO A3 - CCO VO
 * 
 * INTEGRANTES:
 * 
 * GUSTAVO SANTANA OLIVEIRA        - 125111369755
 * HENRIQUE ZANETTI AGUIAR         - 125111370333
 * KATHYLLIN SILVA DE SOUZA        - 125111355061
 * PABLO ZALEM VILAÇA              - 125111361318
 * RAFAEL MARTINS DAS CHAGAS       - 125111357085
 * VINICIUS BARROCHELO VAZ MOREIRA - 125111346483
 * 
 */
public class CadastroBasico extends javax.swing.JFrame {

    /**
     * Creates new form CadastroLogin
     */
    
    // Listas vazias que servem como armazenamento alternativo ao BD
    //public static ArrayList<Atleta> atletas = new ArrayList<>();
    //public static ArrayList<Evento> eventos = new ArrayList<>();

    // Dados dummy para o programa não iniciar sem nenhum dado
    public static ArrayList<Atleta> atletas = DummyAtleta.getData();
    public static ArrayList<Evento> eventos = DummyEvento.getData();
    
    // O índice do atleta que está sendo consultado atualmente
    public static int indexAtleta = 0;

    // Modelos das tabelas do cadastro e consulta de eventos
    AtletaTableModel tableModelCad = new AtletaTableModel();
    AtletaTableModel tableModelCon = new AtletaTableModel();

    // Índice do evento e do atleta que será adicionado ao evento
    public static int indexAtletaEvento = 0;
    public static int indexEvento = 0;

    
    public CadastroBasico() {
        initComponents();
        
        this.setResizable(false);
        this.setSize(700, 500);
        
        
        // Associação dos modelos às tabelas
        jTableConEvento.setModel(tableModelCon);
        jTableCadEvento.setModel(tableModelCad);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        CadUsuario = new javax.swing.JTextField();
        CadPeso = new javax.swing.JTextField();
        CadNome = new javax.swing.JTextField();
        btnCadAtletaCriar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        CadNacionalidade = new javax.swing.JTextField();
        CadAltura = new javax.swing.JTextField();
        CadSenha = new javax.swing.JPasswordField();
        CadDataNasc = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        ConId = new javax.swing.JTextField();
        btnProcurar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        ConUsuario = new javax.swing.JTextField();
        ConPeso = new javax.swing.JTextField();
        ConAltura = new javax.swing.JTextField();
        ConNacionalidade = new javax.swing.JTextField();
        ConNome = new javax.swing.JTextField();
        btnConAtletaAtualizar = new javax.swing.JButton();
        btnConAtletaDeletar = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        ConSenha = new javax.swing.JPasswordField();
        ConDataNasc = new javax.swing.JFormattedTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        btnCadEventoAdicionaAtleta = new javax.swing.JButton();
        CadEventoModalidade = new javax.swing.JComboBox<>();
        CadEventoData = new javax.swing.JFormattedTextField();
        CadEventoNome = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCadEvento = new javax.swing.JTable();
        btnCadEventoDeletaAtleta = new javax.swing.JButton();
        btnEventoCria = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        ConEventoID = new javax.swing.JTextField();
        btnConEventoBusca = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableConEvento = new javax.swing.JTable();
        ConEventoNome = new javax.swing.JTextField();
        ConEventoData = new javax.swing.JTextField();
        btnConAtualizaEvento = new javax.swing.JButton();
        btnConDeletaEvento = new javax.swing.JButton();
        btnConEventoAdicionaAtleta = new javax.swing.JButton();
        btnConEventoDeletaAtleta = new javax.swing.JButton();
        ConEventoModalidade = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 500));

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(540, 380));

        jLabel1.setText("Nome");

        jLabel2.setText("Data de Nascimento");

        jLabel3.setText("Nacionalidade");

        jLabel4.setText("Altura");

        jLabel5.setText("Peso");

        jLabel6.setText("Usuario");

        CadPeso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CadPesoKeyTyped(evt);
            }
        });

        btnCadAtletaCriar.setText("Cadastrar");
        btnCadAtletaCriar.setMaximumSize(new java.awt.Dimension(100, 45));
        btnCadAtletaCriar.setMinimumSize(new java.awt.Dimension(100, 45));
        btnCadAtletaCriar.setPreferredSize(new java.awt.Dimension(100, 45));
        btnCadAtletaCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadAtletaCriarActionPerformed(evt);
            }
        });

        jLabel8.setText("Senha");

        CadAltura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CadAlturaKeyTyped(evt);
            }
        });

        CadDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        CadDataNasc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CadDataNascKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CadDataNascKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(CadUsuario, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CadPeso, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CadAltura, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CadNacionalidade, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CadDataNasc, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CadNome, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                    .addComponent(CadSenha))
                .addContainerGap(188, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(352, Short.MAX_VALUE)
                .addComponent(btnCadAtletaCriar, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(290, 290, 290))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(CadNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CadDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(CadNacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(CadAltura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(CadUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(CadPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(CadSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(btnCadAtletaCriar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cadastro Atletas", jPanel1);

        jLabel7.setText("ID");

        ConId.setEnabled(false);

        btnProcurar.setText("Selecionar");
        btnProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarActionPerformed(evt);
            }
        });

        jLabel9.setText("Nome");

        jLabel10.setText("Data de Nascimento");

        jLabel11.setText("Nacionalidade");

        jLabel12.setText("Altura");

        jLabel13.setText("Peso");

        jLabel14.setText("Usuario");

        ConPeso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ConPesoKeyTyped(evt);
            }
        });

        ConAltura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ConAlturaKeyTyped(evt);
            }
        });

        ConNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConNomeActionPerformed(evt);
            }
        });

        btnConAtletaAtualizar.setText("Atualizar");
        btnConAtletaAtualizar.setEnabled(false);
        btnConAtletaAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConAtletaAtualizarActionPerformed(evt);
            }
        });

        btnConAtletaDeletar.setText("Deletar");
        btnConAtletaDeletar.setEnabled(false);
        btnConAtletaDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConAtletaDeletarActionPerformed(evt);
            }
        });

        jLabel15.setText("Senha");

        ConDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        ConDataNasc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ConDataNascKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnConAtletaAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 290, Short.MAX_VALUE)
                        .addComponent(btnConAtletaDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(ConId)
                                .addGap(18, 18, 18)
                                .addComponent(btnProcurar))
                            .addComponent(ConNome)
                            .addComponent(ConNacionalidade)
                            .addComponent(ConAltura)
                            .addComponent(ConPeso)
                            .addComponent(ConUsuario)
                            .addComponent(ConSenha)
                            .addComponent(ConDataNasc))))
                .addGap(28, 28, 28))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(ConId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProcurar))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(ConNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(ConDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(ConNacionalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(ConAltura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(ConPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(ConUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(ConSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConAtletaAtualizar)
                    .addComponent(btnConAtletaDeletar))
                .addContainerGap(126, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Consulta Atletas", jPanel2);

        jLabel16.setText("Nome");

        jLabel17.setText("Data");

        jLabel18.setText("Modalidade");

        jLabel19.setText("Participantes");

        btnCadEventoAdicionaAtleta.setText("Adicionar");
        btnCadEventoAdicionaAtleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadEventoAdicionaAtletaActionPerformed(evt);
            }
        });

        CadEventoModalidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Badminton", "Basquete", "Ciclismo", "Futebol", "Vôlei" }));

        CadEventoData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        CadEventoData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CadEventoDataKeyTyped(evt);
            }
        });

        CadEventoNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadEventoNomeActionPerformed(evt);
            }
        });

        jTableCadEvento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Nacionalidade", "Altura", "Peso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableCadEvento);
        if (jTableCadEvento.getColumnModel().getColumnCount() > 0) {
            jTableCadEvento.getColumnModel().getColumn(0).setHeaderValue("Nome");
            jTableCadEvento.getColumnModel().getColumn(1).setHeaderValue("Nacionalidade");
            jTableCadEvento.getColumnModel().getColumn(2).setHeaderValue("Altura");
            jTableCadEvento.getColumnModel().getColumn(3).setHeaderValue("Peso");
        }

        btnCadEventoDeletaAtleta.setText("Excluir");
        btnCadEventoDeletaAtleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadEventoDeletaAtletaActionPerformed(evt);
            }
        });

        btnEventoCria.setText("Criar Evento ");
        btnEventoCria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEventoCriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel19)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CadEventoData)
                            .addComponent(CadEventoNome)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(475, 475, 475)
                                .addComponent(btnCadEventoAdicionaAtleta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCadEventoDeletaAtleta)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(CadEventoModalidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2))
                .addContainerGap(119, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEventoCria)
                .addGap(331, 331, 331))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(CadEventoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(CadEventoData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(CadEventoModalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(btnCadEventoAdicionaAtleta)
                    .addComponent(btnCadEventoDeletaAtleta))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEventoCria)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Criar Eventos", jPanel3);

        jLabel20.setText("ID");

        ConEventoID.setEnabled(false);

        btnConEventoBusca.setText("Selecionar");
        btnConEventoBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConEventoBuscaActionPerformed(evt);
            }
        });

        jLabel21.setText("Nome");

        jLabel22.setText("Data");

        jLabel23.setText("Modalidade");

        jLabel24.setText("Participantes");

        jTableConEvento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableConEvento);

        ConEventoNome.setEnabled(false);

        ConEventoData.setEnabled(false);

        btnConAtualizaEvento.setText("Atualizar");
        btnConAtualizaEvento.setEnabled(false);
        btnConAtualizaEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConAtualizaEventoActionPerformed(evt);
            }
        });

        btnConDeletaEvento.setText("Deletar");
        btnConDeletaEvento.setEnabled(false);
        btnConDeletaEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConDeletaEventoActionPerformed(evt);
            }
        });

        btnConEventoAdicionaAtleta.setText("Adicionar");
        btnConEventoAdicionaAtleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConEventoAdicionaAtletaActionPerformed(evt);
            }
        });

        btnConEventoDeletaAtleta.setText("Excluir");
        btnConEventoDeletaAtleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConEventoDeletaAtletaActionPerformed(evt);
            }
        });

        ConEventoModalidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Badminton", "Basquete", "Ciclismo", "Futebol", "Vôlei" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 709, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btnConAtualizaEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnConDeletaEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 119, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addGap(75, 75, 75)
                                .addComponent(ConEventoID))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel21))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnConEventoAdicionaAtleta, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ConEventoData, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(ConEventoNome)
                                            .addComponent(ConEventoModalidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnConEventoBusca, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                            .addComponent(btnConEventoDeletaAtleta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(34, 34, 34))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(ConEventoID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConEventoBusca))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(ConEventoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(ConEventoData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(ConEventoModalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(btnConEventoAdicionaAtleta)
                    .addComponent(btnConEventoDeletaAtleta))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConAtualizaEvento)
                    .addComponent(btnConDeletaEvento))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Eventos", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void limparCadastroAtleta(){
        CadNome.setText("");
        CadDataNasc.setText("");
        CadNacionalidade.setText("");
        CadAltura.setText("");
        CadPeso.setText("");
        CadUsuario.setText("");
        CadSenha.setText("");
    }
    
    public void limparConsultaAtleta(){
        ConNome.setText("");
        ConDataNasc.setText("");
        ConNacionalidade.setText("");
        ConAltura.setText("");
        ConPeso.setText("");
        ConUsuario.setText("");
        ConSenha.setText("");
    }
    
    public boolean ValidarCamposConsulta(){
        if (ConNome.getText().isEmpty() || ConDataNasc.getText().isEmpty() ||
                ConNacionalidade.getText().isEmpty() || ConAltura.getText().isEmpty() ||
                ConPeso.getText().isEmpty() || ConUsuario.getText().isEmpty() || 
                ConSenha.getPassword().length == 0){
            
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos", "Atenção", HEIGHT);
            return false;
        } else{
            if (ConSenha.getPassword().length < 8){
                JOptionPane.showMessageDialog(rootPane, "A senha deve conter no mínimo 8 caractéres", "Atenção", HEIGHT);
                return false;
            }
        }
        return true;
    }
    
    public boolean ValidarCamposCadastro(){
        if (CadNome.getText().isEmpty() || CadDataNasc.getText().isEmpty() ||
                CadNacionalidade.getText().isEmpty() || CadAltura.getText().isEmpty() ||
                CadPeso.getText().isEmpty() || CadUsuario.getText().isEmpty() || 
                CadSenha.getPassword().length == 0){
            
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos", "Atenção", HEIGHT);
            return false;
        } else{
            if (CadSenha.getPassword().length < 8){
                JOptionPane.showMessageDialog(rootPane, "A senha deve conter no mínimo 8 caractéres", "Atenção", HEIGHT);
                return false;
            }
        }
        return true;
    }
    
    public void limparCadastroEvento(){
        CadEventoNome.setText("");
        CadEventoData.setText("");
        CadEventoModalidade.setSelectedIndex(0);
        tableModelCad.deleteAll();
    }
    
    public void limparConsultaEvento(){
        ConEventoID.setText("");
        ConEventoNome.setText("");
        ConEventoData.setText("");
        ConEventoModalidade.setSelectedIndex(0);
        tableModelCon.deleteAll();
    }
    
    public boolean validarEventoCad(){
        switch (CadEventoModalidade.getSelectedItem().toString()){
            case "Badminton":
                if (tableModelCad.getRowCount() < 2){
                    JOptionPane.showMessageDialog(rootPane, "Um evento de Badminton deve ter no mínimo dois participantes", "Falha", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
                break;
            case "Basquete":
                if (tableModelCad.getRowCount() < 10){
                    JOptionPane.showMessageDialog(rootPane, "Um evento de Basquete deve ter no mínimo dez participantes", "Falha", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
                break;
                
            case "Futebol":
                if (tableModelCad.getRowCount() < 22){
                    JOptionPane.showMessageDialog(rootPane, "Um evento de futebol deve ter no mínimo vinte e dois participante", "Falha", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
                break;
                
            case "Vôlei":
                if (tableModelCad.getRowCount() < 12){
                    JOptionPane.showMessageDialog(rootPane, "Um evento de Vôlei deve ter no mínimo doze participantes", "Falha", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
                break;
                
            default:
                if (tableModelCad.getRowCount() < 1){
                    JOptionPane.showMessageDialog(rootPane, "O evento deve ter no mínimo um participante", "Falha", JOptionPane.ERROR_MESSAGE);
                        return false;
                } 
        }
        
        if (CadEventoNome.getText().isEmpty() || CadEventoData.getText().isEmpty() ||
                CadEventoModalidade.getSelectedIndex() == 0){
                JOptionPane.showMessageDialog(rootPane, "Preencha todos os dados do evento", "Falha", JOptionPane.ERROR_MESSAGE);
                return false;
        }
        return true;
    }
    
    public boolean validarEventoCon(){
        switch (ConEventoModalidade.getSelectedItem().toString()){
            case "Badminton":
                if (tableModelCon.getRowCount() < 2){
                    JOptionPane.showMessageDialog(rootPane, "Um evento de Badminton deve ter no mínimo dois participantes", "Falha", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
                break;
            case "Basquete":
                if (tableModelCon.getRowCount() < 10){
                    JOptionPane.showMessageDialog(rootPane, "Um evento de Basquete deve ter no mínimo dez participantes", "Falha", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
                break;
                
            case "Futebol":
                if (tableModelCon.getRowCount() < 22){
                    JOptionPane.showMessageDialog(rootPane, "Um evento de futebol deve ter no mínimo vinte e dois participante", "Falha", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
                break;
                
            case "Vôlei":
                if (tableModelCon.getRowCount() < 12){
                    JOptionPane.showMessageDialog(rootPane, "Um evento de Vôlei deve ter no mínimo doze participantes", "Falha", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
                break;
                
            default:
                if (tableModelCon.getRowCount() < 1){
                    JOptionPane.showMessageDialog(rootPane, "O evento deve ter no mínimo um participante", "Falha", JOptionPane.ERROR_MESSAGE);
                        return false;
                } 
        }
        
        if (ConEventoNome.getText().isEmpty() || ConEventoData.getText().isEmpty() ||
                ConEventoModalidade.getSelectedIndex() == 0){
                JOptionPane.showMessageDialog(rootPane, "Preencha todos os dados do evento", "Falha", JOptionPane.ERROR_MESSAGE);
                return false;
        }
        return true;
    }
    
    private void btnCadAtletaCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadAtletaCriarActionPerformed
        // TODO add your handling code here:
        if (ValidarCamposCadastro()){
            // Não é necessário fazer try/catch pois o campo já é validado
            float altura = Float.parseFloat(CadAltura.getText());
            
            // Não é necessário fazer try/catch pois o campo já é validado
            float peso = Float.parseFloat(CadPeso.getText());
            
            // Criando o atleta e adicionando na lista
            Atleta a1 = new Atleta(CadNome.getText(), CadDataNasc.getText(), CadNacionalidade.getText(),
                    altura, peso,CadUsuario.getText(), CadSenha.getPassword());
            atletas.add(a1);
            JOptionPane.showMessageDialog(rootPane, "Atleta criado com sucesso. ID: " + a1.getId(), "Sucesso", JOptionPane.PLAIN_MESSAGE);
            
            limparCadastroAtleta();
        }
    }//GEN-LAST:event_btnCadAtletaCriarActionPerformed

    private void ConNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ConNomeActionPerformed

    private void btnProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarActionPerformed
        // TODO add your handling code here:
        
        // Criando um combo box que vai conter todos os atletas inseridos
        JComboBox jcb = new JComboBox();
        
        // Percorrendo a lista de atletas e adicionando cada um no combobox
        for (Atleta atleta : atletas){
            jcb.addItem(atleta.getId() + " - " + atleta.getNome()) ;
        }
        
        JOptionPane.showMessageDialog(null, jcb, "Selecione o atleta", JOptionPane.QUESTION_MESSAGE);
        
        indexAtleta = jcb.getSelectedIndex();

        // Obtendo o atleta através do índice e preenchendo os campos na tela
        try {
            Atleta a1 = atletas.get(indexAtleta);
            
            ConId.setText(Integer.toString(a1.getId()));
            ConNome.setText(a1.getNome());
            ConDataNasc.setText(a1.getDataNasc());
            ConNacionalidade.setText(a1.getNacionalidade());
            ConAltura.setText(Float.toString(a1.getAltura()));
            ConPeso.setText(Float.toString(a1.getPeso()));
            ConUsuario.setText(a1.getUsuario());
            ConSenha.setText(a1.getSenha());
            
            btnConAtletaAtualizar.setEnabled(true);
            btnConAtletaDeletar.setEnabled(true);
        } catch (IndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(rootPane, "ID Inexistente", "Atenção", HEIGHT);
            
            btnConAtletaAtualizar.setEnabled(false);
            btnConAtletaDeletar.setEnabled(false);
            limparConsultaAtleta();
        }
    }//GEN-LAST:event_btnProcurarActionPerformed
    
    private void btnConAtletaDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConAtletaDeletarActionPerformed
        // TODO add your handling code here:
        try {
            // O showConfirmDialog retorna 1 para não e 0 para sim
            int deletar = JOptionPane.showConfirmDialog(rootPane, "Deseja mesmo excluir esse registro?", "Atenção", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            
            if (deletar == 0){
                limparConsultaAtleta();
                atletas.remove(indexAtleta);

                JOptionPane.showMessageDialog(rootPane, "Atleta deletado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                btnConAtletaAtualizar.setEnabled(false);
            btnConAtletaDeletar.setEnabled(false);
            }
        } catch (Exception e){
            JOptionPane.showMessageDialog(rootPane, "Houve um erro ao deletar o registro", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnConAtletaDeletarActionPerformed

    private void btnConAtletaAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConAtletaAtualizarActionPerformed
        // TODO add your handling code here:
        try {
            
            // Não é necessário fazer try/catch pois o campo já é validado
            float altura = Float.parseFloat(ConAltura.getText());
            
            // Não é necessário fazer try/catch pois o campo já é validado
            float peso = Float.parseFloat(ConPeso.getText());
            
            if (ValidarCamposConsulta()){       
                // Atualizando os dados do atleta

                atletas.get(indexAtleta).setNome(ConNome.getText());
                atletas.get(indexAtleta).setDataNasc(ConDataNasc.getText());
                atletas.get(indexAtleta).setNacionalidade(ConNacionalidade.getText());
                atletas.get(indexAtleta).setAltura(altura);
                atletas.get(indexAtleta).setPeso(peso);
                atletas.get(indexAtleta).setUsuario(ConUsuario.getText());
                atletas.get(indexAtleta).setSenha(ConSenha.getPassword());

                limparConsultaAtleta();

                btnConAtletaAtualizar.setEnabled(false);
                btnConAtletaDeletar.setEnabled(false);

                JOptionPane.showMessageDialog(rootPane, "Atleta atualizado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e){
            JOptionPane.showMessageDialog(rootPane, "Houve um erro ao atualizar o registro", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnConAtletaAtualizarActionPerformed

    private void CadAlturaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CadAlturaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        
        if (CadAltura.getText().isEmpty() && c == '.'){
            evt.consume();
        }
        
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE || c == '.')){
            evt.consume();
        }
    }//GEN-LAST:event_CadAlturaKeyTyped

    private void CadPesoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CadPesoKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        
        if (CadPeso.getText().isEmpty() && c == '.'){
            evt.consume();
        }
        
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE || c == '.')){
            evt.consume();
        }
    }//GEN-LAST:event_CadPesoKeyTyped

    private void ConDataNascKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ConDataNascKeyTyped
        // TODO add your handling code here:
        int length = ConDataNasc.getText().length();
        char c = evt.getKeyChar();
        
        if (!(Character.isDigit(c))){
            evt.consume();
        }
        
        if (length >= 10){
            evt.consume();
        }
        
        if ((length == 2 || length == 5) && !(c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)){
            ConDataNasc.setText(ConDataNasc.getText() + "/");
        }
    }//GEN-LAST:event_ConDataNascKeyTyped

    private void CadDataNascKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CadDataNascKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_CadDataNascKeyPressed

    private void CadDataNascKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CadDataNascKeyTyped
        // TODO add your handling code here:
        int length = CadDataNasc.getText().length();
        char c = evt.getKeyChar();
        
        if (!(Character.isDigit(c))){
            evt.consume();
        }
        
        if (length >= 10){
            evt.consume();
        }
        
        if ((length == 2 || length == 5) && !(c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)){
            CadDataNasc.setText(CadDataNasc.getText() + "/");
        }
    }//GEN-LAST:event_CadDataNascKeyTyped

    private void ConAlturaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ConAlturaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        
        if (ConAltura.getText().isEmpty() && c == '.'){
            evt.consume();
        }
        
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE || c == '.')){
            evt.consume();
        }
    }//GEN-LAST:event_ConAlturaKeyTyped

    private void ConPesoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ConPesoKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        
        if (ConPeso.getText().isEmpty() && c == '.'){
            evt.consume();
        }
        
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE || c == '.')){
            evt.consume();
        }
    }//GEN-LAST:event_ConPesoKeyTyped

    private void btnCadEventoAdicionaAtletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadEventoAdicionaAtletaActionPerformed
        // TODO add your handling code here:
        
        indexAtletaEvento = 0;
         // Criando um combo box que vai conter todos os atletas inseridos
        JComboBox jcb = new JComboBox();
        
        // Percorrendo a lista de atletas e adicionando cada um no combobox
        for (Atleta atleta : atletas){
            jcb.addItem(atleta.getId() + " - " + atleta.getNome()) ;
        }
        
        JOptionPane.showMessageDialog(null, jcb, "Selecione o atleta", JOptionPane.QUESTION_MESSAGE);
        
        indexAtletaEvento = jcb.getSelectedIndex();
        
        Atleta a1 = atletas.get(indexAtletaEvento);
        
        int tempAtletaID = a1.getId();
        boolean isOk = true;
        for (Atleta atleta : tableModelCad.getAll()){
            if (atleta.getId() == tempAtletaID){
                isOk = false;
            }
        }

        // Obtendo o atleta através do índice e passando os dados pra tabela
        
        if (isOk){
            tableModelCad.addRow(a1);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Atleta já registrado!", "ATENÇÂO", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnCadEventoAdicionaAtletaActionPerformed

    private void CadEventoNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadEventoNomeActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_CadEventoNomeActionPerformed

    private void btnCadEventoDeletaAtletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadEventoDeletaAtletaActionPerformed
        // TODO add your handling code here:
        try{
            tableModelCad.removeRow(jTableCadEvento.getSelectedRow());
        } catch (ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(rootPane, "Selecione um atleta", "Atenção", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCadEventoDeletaAtletaActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // TODO add your handling code here:
        int tabIndex = jTabbedPane1.getSelectedIndex();
        
        if (tabIndex == 0){
            this.setSize(700, 500);

        }
        
        if (tabIndex == 1){
            this.setSize(700, 500);
        }
        
        if (tabIndex == 2){
            this.setSize(770, 550);
        }
        
        if (tabIndex == 3){
            this.setSize(780, 580);
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void btnEventoCriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEventoCriaActionPerformed
        // TODO add your handling code here:
        boolean isOk = validarEventoCad();
        
        if (isOk){
            ArrayList<Atleta> atletasCopy;
            
            atletasCopy = tableModelCad.getAll();

            Evento e1 = new Evento(CadEventoNome.getText(), CadEventoData.getText(),
                    CadEventoModalidade.getSelectedItem().toString(), (ArrayList<Atleta>) atletasCopy.clone()
            );
            eventos.add(e1);
            
            JOptionPane.showMessageDialog(rootPane, "Evento criado com sucesso. ID: " + e1.getId(), "", JOptionPane.INFORMATION_MESSAGE);
            limparCadastroEvento();
        }
    }//GEN-LAST:event_btnEventoCriaActionPerformed

    private void btnConEventoBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConEventoBuscaActionPerformed
        // TODO add your handling code here:
        // Criando um combo box que vai conter todos os atletas inseridos
        JComboBox jcb = new JComboBox();
        
        // Percorrendo a lista de atletas e adicionando cada um no combobox
        for (Evento evento : eventos){
            jcb.addItem(evento.getId() + " - " + evento.getNome()) ;
        }
        
        JOptionPane.showMessageDialog(null, jcb, "Selecione o evento", JOptionPane.QUESTION_MESSAGE);
        
        indexEvento = jcb.getSelectedIndex();
        
        Evento e1 = eventos.get(indexEvento);
        
        ConEventoID.setText(Integer.toString(e1.getId()));
        ConEventoNome.setText(e1.getNome());
        ConEventoData.setText(e1.getData());
        
        String eventoModalidade = e1.getModalidade();
        
        switch (eventoModalidade){
            case "Badminton":
                ConEventoModalidade.setSelectedIndex(1);

                break;
                
            case "Basquete":
                ConEventoModalidade.setSelectedIndex(2);

                break;
                
            case "Ciclismo":
                ConEventoModalidade.setSelectedIndex(3);

                break;
                
            case "Futebol":
                ConEventoModalidade.setSelectedIndex(4);

                break;
                
            case "Vôlei":
                ConEventoModalidade.setSelectedIndex(5);
                break;
                
            default:
                ConEventoModalidade.setSelectedIndex(0);
                break;
        }
                
        tableModelCon.deleteAll();
        
        for (Atleta atleta : e1.getParticipantes()){
            tableModelCon.addRow(atleta);
        }
        
        btnConDeletaEvento.setEnabled(true);
        btnConAtualizaEvento.setEnabled(true);
        ConEventoNome.setEnabled(true);
        ConEventoData.setEnabled(true);
        ConEventoModalidade.setEnabled(true);
        
        
    }//GEN-LAST:event_btnConEventoBuscaActionPerformed

    private void CadEventoDataKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CadEventoDataKeyTyped
        // TODO add your handling code here:
        int length = CadEventoData.getText().length();
        char c = evt.getKeyChar();
        
        if (!(Character.isDigit(c))){
            evt.consume();
        }
        
        if (length >= 10){
            evt.consume();
        }
        
        if ((length == 2 || length == 5) && !(c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)){
            CadEventoData.setText(CadEventoData.getText() + "/");
        }
    }//GEN-LAST:event_CadEventoDataKeyTyped

    private void btnConAtualizaEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConAtualizaEventoActionPerformed
        // TODO add your handling code here:
        try {
            if (validarEventoCon()){       
                // Atualizando os dados do atleta
                
                ArrayList<Atleta> atletasCopy;
            
                atletasCopy = tableModelCon.getAll();

                eventos.get(indexEvento).setNome(ConEventoNome.getText());
                eventos.get(indexEvento).setModalidade(ConEventoModalidade.getSelectedItem().toString());
                eventos.get(indexEvento).setData(ConEventoData.getText());
                eventos.get(indexEvento).setParticipantes((ArrayList<Atleta>) atletasCopy.clone());

                limparConsultaEvento();

                btnConAtualizaEvento.setEnabled(false);
                btnConDeletaEvento.setEnabled(false);

                JOptionPane.showMessageDialog(rootPane, "Evento atualizado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e){
            JOptionPane.showMessageDialog(rootPane, "Houve um erro ao atualizar o registro", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnConAtualizaEventoActionPerformed

    private void btnConDeletaEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConDeletaEventoActionPerformed
        // TODO add your handling code here:
        
        if (ConEventoID.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Selecione um evento!", "ERRO", JOptionPane.ERROR_MESSAGE);

            return;
        }
        
        try {
            // O showConfirmDialog retorna 1 para não e 0 para sim
            int deletar = JOptionPane.showConfirmDialog(rootPane, "Deseja mesmo excluir esse registro?", "Atenção", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            
            if (deletar == 0){
                limparConsultaEvento();
                eventos.remove(indexEvento);

                JOptionPane.showMessageDialog(rootPane, "Evento deletado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                btnConAtualizaEvento.setEnabled(false);
                btnConDeletaEvento.setEnabled(false);
            }
        } catch (Exception e){
            JOptionPane.showMessageDialog(rootPane, "Houve um erro ao deletar o registro", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnConDeletaEventoActionPerformed

    private void btnConEventoAdicionaAtletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConEventoAdicionaAtletaActionPerformed
        // TODO add your handling code here:
        indexAtletaEvento = 0;
         // Criando um combo box que vai conter todos os atletas inseridos
        JComboBox jcb = new JComboBox();
        
        // Percorrendo a lista de atletas e adicionando cada um no combobox
        for (Atleta atleta : atletas){
            jcb.addItem(atleta.getId() + " - " + atleta.getNome()) ;
        }
        
        JOptionPane.showMessageDialog(null, jcb, "Selecione o atleta", JOptionPane.QUESTION_MESSAGE);
        
        indexAtletaEvento = jcb.getSelectedIndex();
        
        Atleta a1 = atletas.get(indexAtletaEvento);
        
        int tempAtletaID = a1.getId();
        boolean isOk = true;
        for (Atleta atleta : tableModelCon.getAll()){
            if (atleta.getId() == tempAtletaID){
                isOk = false;
            }
        }

        // Obtendo o atleta através do índice e passando os dados pra tabela
        
        if (isOk){
            tableModelCon.addRow(a1);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Atleta já registrado!", "ATENÇÂO", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnConEventoAdicionaAtletaActionPerformed

    private void btnConEventoDeletaAtletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConEventoDeletaAtletaActionPerformed
        // TODO add your handling code here:
        try{
            tableModelCon.removeRow(jTableConEvento.getSelectedRow());
        } catch (ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(rootPane, "Selecione um atleta", "Atenção", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnConEventoDeletaAtletaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroBasico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroBasico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroBasico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroBasico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroBasico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CadAltura;
    private javax.swing.JFormattedTextField CadDataNasc;
    private javax.swing.JFormattedTextField CadEventoData;
    private javax.swing.JComboBox<String> CadEventoModalidade;
    private javax.swing.JTextField CadEventoNome;
    private javax.swing.JTextField CadNacionalidade;
    private javax.swing.JTextField CadNome;
    private javax.swing.JTextField CadPeso;
    private javax.swing.JPasswordField CadSenha;
    private javax.swing.JTextField CadUsuario;
    private javax.swing.JTextField ConAltura;
    private javax.swing.JFormattedTextField ConDataNasc;
    private javax.swing.JTextField ConEventoData;
    private javax.swing.JTextField ConEventoID;
    private javax.swing.JComboBox<String> ConEventoModalidade;
    private javax.swing.JTextField ConEventoNome;
    private javax.swing.JTextField ConId;
    private javax.swing.JTextField ConNacionalidade;
    private javax.swing.JTextField ConNome;
    private javax.swing.JTextField ConPeso;
    private javax.swing.JPasswordField ConSenha;
    private javax.swing.JTextField ConUsuario;
    private javax.swing.JButton btnCadAtletaCriar;
    private javax.swing.JButton btnCadEventoAdicionaAtleta;
    private javax.swing.JButton btnCadEventoDeletaAtleta;
    private javax.swing.JButton btnConAtletaAtualizar;
    private javax.swing.JButton btnConAtletaDeletar;
    private javax.swing.JButton btnConAtualizaEvento;
    private javax.swing.JButton btnConDeletaEvento;
    private javax.swing.JButton btnConEventoAdicionaAtleta;
    private javax.swing.JButton btnConEventoBusca;
    private javax.swing.JButton btnConEventoDeletaAtleta;
    private javax.swing.JButton btnEventoCria;
    private javax.swing.JButton btnProcurar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableCadEvento;
    private javax.swing.JTable jTableConEvento;
    // End of variables declaration//GEN-END:variables
}
